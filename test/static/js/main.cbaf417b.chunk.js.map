{"version":3,"sources":["../../../../../dist/esm/tools/polyfills/Object.fromEntries.js","../../../../../dist/esm/tools/objectKeys.js","../../../../../dist/esm/tools/assert.js","../../../../../dist/esm/tools/typeGuard.js","../../../../../dist/esm/tools/classnames.js","../../../../../dist/esm/cssAndCx.js","../../../../../dist/esm/tools/useGuaranteedMemo.js","../../../../../dist/esm/mergeClasses.js","../../../../../dist/esm/makeStyles.js","../../../../../dist/esm/tools/capitalize.js","../../../../../dist/esm/withStyles.js","../../../../../dist/esm/GlobalStyles.js","../../../../../dist/esm/index.js","makeStyles.ts","App.tsx","index.tsx"],"names":["objectFromEntries","Object","fromEntries","entries","Symbol","iterator","Error","o","keys","forEach","key","k","v","objectKeys","assert","condition","msg","typeGuard","_value","isMatched","classnames","args","len","length","i","cls","arg","toAdd","Array","isArray","merge","registered","css","className","registeredStyles","rawClassName","getRegisteredStyles","createCssAndCx","params","cache","serialized","serializeStyles","insertStyles","name","cx","createUseCssAndCx","useCache","useCssAndCx","fn","deps","ref","useRef","current","prevDeps","map","indexOf","useGuaranteedMemo","mergeClasses","classesFromUseStyles","classesFromProps","out","ruleName","counter","createMakeStyles","useTheme","cacheProvidedAtInception","_a","contextualCache","useContextualCache","cacheExplicitlyProvidedForTss","useContext","reactContext","cacheToBeUsed","join","makeStyles","nameOrWrappedName","uniqId","cssObjectByRuleNameOrGetCssObjectByRuleName","getCssObjectByRuleName","styleOverrides","_b","theme","classes","useMemo","refClassesCache","refClasses","Proxy","_target","propertyKey","undefined","cssObjectByRuleName","cssObject","label","propsClasses","props","components","_c","themeClasses","cssObjectOrGetCssObject","assign","ownerState","JSON","stringify","useStyles","createContext","capitalize","str","charAt","toUpperCase","slice","__rest","s","e","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","incorporateMediaQueries","cssObjectByRuleNameWithMediaQueries","cssObjectByRuleNameWithMediaQueriesByMediaQuery","ruleNameOrMediaQuery","startsWith","mediaQuery","cssObjectByRuleNameBis","GlobalStyles","styles","React","createElement","reactEmotion","withStyles","Component","Component_","tag","Out","children","defineProperty","displayName","getHasNonRootClasses","forwardRef","rest","root","createWithStyles","H1","styled","App","ovStyled","Button","variant","color","ovInternal","parent","child","Breadcrumbs","breadcrumbs_className","style","breadcrumbs2_root","breadcrumbs2_separator","MyBreadcrumbs","button2_className","button2_root","testCx_bgYellow","testCx_bgCyan","childRefTest_wrapper","childRefTest_textColorPink","childRefTest_wrapper1","childRefTest_wrapper2","mq","MyComponentStyled","colorSmall","MyStyledButton","MyAnchorStyled","href","lightBulbBorderColor","StyledTab","icon","_params","palette","primary","main","_props","separator","SecondNestedSelectorExample","memo","small","MyTestComponentForMergedClasses","MyTestComponentForMergedClassesInternal","foo","bar","TestCastingMuiTypographyStyleToCSSObject","typography","subtitle2","Typography","TestPr54","CustomInputBase","InputBase","grey","TestingStyleOverrides","useReducer","isOn","toggleIsOn","lightBulb","onClick","Tab","muiCache","createCache","createTheme","info","Root","createRoot","document","getElementById","render","value","CssBaseline"],"mappings":"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","file":"static/js/main.cbaf417b.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const objectFromEntries = !Object\n    .fromEntries\n    ? (entries) => {\n        if (!entries || !entries[Symbol.iterator]) {\n            throw new Error(\"Object.fromEntries() requires a single iterable argument\");\n        }\n        const o = {};\n        Object.keys(entries).forEach(key => {\n            const [k, v] = entries[key];\n            o[k] = v;\n        });\n        return o;\n    }\n    : Object.fromEntries;\n","/** Object.keys() with types */\nexport function objectKeys(o) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return Object.keys(o);\n}\n","/** https://docs.tsafe.dev/assert */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard(_value, isMatched) {\n    return isMatched;\n}\n","import { assert } from \"./assert\";\nimport { typeGuard } from \"./typeGuard\";\n/** Copy pasted from\n * https://github.com/emotion-js/emotion/blob/23f43ab9f24d44219b0b007a00f4ac681fe8712e/packages/react/src/class-names.js#L17-L63\n **/\nexport const classnames = (args) => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null)\n            continue;\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = classnames(arg);\n                }\n                else {\n                    assert(!typeGuard(arg, false));\n                    if (process.env.NODE_ENV !== \"production\" &&\n                        arg.styles !== undefined &&\n                        arg.name !== undefined) {\n                        console.error(\"You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n\" +\n                            \"`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.\");\n                    }\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import { classnames } from \"./tools/classnames\";\nimport { serializeStyles } from \"@emotion/serialize\";\nimport { insertStyles, getRegisteredStyles } from \"@emotion/utils\";\nimport { useGuaranteedMemo } from \"./tools/useGuaranteedMemo\";\nexport const { createCssAndCx } = (() => {\n    function merge(registered, css, className) {\n        const registeredStyles = [];\n        const rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n        if (registeredStyles.length < 2) {\n            return className;\n        }\n        return rawClassName + css(registeredStyles);\n    }\n    function createCssAndCx(params) {\n        const { cache } = params;\n        const css = (...args) => {\n            const serialized = serializeStyles(args, cache.registered);\n            insertStyles(cache, serialized, false);\n            const className = `${cache.key}-${serialized.name}`;\n            return className;\n        };\n        const cx = (...args) => {\n            const className = classnames(args);\n            return merge(cache.registered, css, className);\n        };\n        return { css, cx };\n    }\n    return { createCssAndCx };\n})();\nexport function createUseCssAndCx(params) {\n    const { useCache } = params;\n    function useCssAndCx() {\n        const cache = useCache();\n        const { css, cx } = useGuaranteedMemo(() => createCssAndCx({ cache }), [cache]);\n        return { css, cx };\n    }\n    return { useCssAndCx };\n}\n","import { useRef } from \"react\";\n/** Like react's useMemo but with guarantee that the fn\n * won't be invoked again if deps hasn't change */\nexport function useGuaranteedMemo(fn, deps) {\n    const ref = useRef();\n    if (!ref.current ||\n        deps.length !== ref.current.prevDeps.length ||\n        ref.current.prevDeps.map((v, i) => v === deps[i]).indexOf(false) >= 0) {\n        ref.current = {\n            \"v\": fn(),\n            \"prevDeps\": [...deps],\n        };\n    }\n    return ref.current.v;\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { objectKeys } from \"./tools/objectKeys\";\nexport function mergeClasses(classesFromUseStyles, classesFromProps, cx) {\n    //NOTE: We use this test to be resilient in case classesFromProps is not of the expected type.\n    if (!(classesFromProps instanceof Object)) {\n        return classesFromUseStyles;\n    }\n    const out = {};\n    objectKeys(classesFromUseStyles).forEach(ruleName => (out[ruleName] = cx(classesFromUseStyles[ruleName], classesFromProps[ruleName])));\n    objectKeys(classesFromProps).forEach(ruleName => {\n        if (ruleName in classesFromUseStyles) {\n            return;\n        }\n        const className = classesFromProps[ruleName];\n        //...Same here, that why we don't do className === undefined\n        if (typeof className !== \"string\") {\n            return;\n        }\n        out[ruleName] = className;\n    });\n    return out;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useMemo } from \"react\";\nimport { objectFromEntries } from \"./tools/polyfills/Object.fromEntries\";\nimport { objectKeys } from \"./tools/objectKeys\";\nimport { createUseCssAndCx } from \"./cssAndCx\";\nimport { typeGuard } from \"./tools/typeGuard\";\nimport { assert } from \"./tools/assert\";\nimport { mergeClasses } from \"./mergeClasses\";\nimport { createContext, useContext } from \"react\";\nimport { __unsafe_useEmotionCache as useContextualCache } from \"@emotion/react\";\nlet counter = 0;\nexport function createMakeStyles(params) {\n    const { useTheme, cache: cacheProvidedAtInception } = params;\n    function useCache() {\n        var _a;\n        const contextualCache = useContextualCache();\n        const cacheExplicitlyProvidedForTss = useCacheProvidedByProvider();\n        const cacheToBeUsed = (_a = cacheProvidedAtInception !== null && cacheProvidedAtInception !== void 0 ? cacheProvidedAtInception : cacheExplicitlyProvidedForTss) !== null && _a !== void 0 ? _a : contextualCache;\n        if (cacheToBeUsed === null) {\n            throw new Error([\n                \"In order to get SSR working with tss-react you need to explicitly provide an Emotion cache.\",\n                \"MUI users be aware: This is not an error strictly related to tss-react, with or without tss-react,\",\n                \"MUI needs an Emotion cache to be provided for SSR to work.\",\n                \"Here is the MUI documentation related to SSR setup: https://mui.com/material-ui/guides/server-rendering/\",\n                \"TSS provides helper that makes the process of setting up SSR easier: https://docs.tss-react.dev/ssr\",\n            ].join(\"\\n\"));\n        }\n        return cacheToBeUsed;\n    }\n    const { useCssAndCx } = createUseCssAndCx({ useCache });\n    /** returns useStyle. */\n    function makeStyles(params) {\n        const { name: nameOrWrappedName, uniqId = counter++ } = params !== null && params !== void 0 ? params : {};\n        const name = typeof nameOrWrappedName !== \"object\"\n            ? nameOrWrappedName\n            : Object.keys(nameOrWrappedName)[0];\n        return function (cssObjectByRuleNameOrGetCssObjectByRuleName) {\n            const getCssObjectByRuleName = typeof cssObjectByRuleNameOrGetCssObjectByRuleName ===\n                \"function\"\n                ? cssObjectByRuleNameOrGetCssObjectByRuleName\n                : () => cssObjectByRuleNameOrGetCssObjectByRuleName;\n            return function useStyles(params, styleOverrides) {\n                var _a, _b;\n                const theme = useTheme();\n                const { css, cx } = useCssAndCx();\n                const cache = useCache();\n                let classes = useMemo(() => {\n                    const refClassesCache = {};\n                    const refClasses = typeof Proxy !== \"undefined\" &&\n                        new Proxy({}, {\n                            \"get\": (_target, propertyKey) => {\n                                if (typeof propertyKey === \"symbol\") {\n                                    assert(false);\n                                }\n                                return (refClassesCache[propertyKey] = `${cache.key}-${uniqId}${name !== undefined ? `-${name}` : \"\"}-${propertyKey}-ref`);\n                            },\n                        });\n                    const cssObjectByRuleName = getCssObjectByRuleName(theme, params, refClasses || {});\n                    const classes = objectFromEntries(objectKeys(cssObjectByRuleName).map(ruleName => {\n                        const cssObject = cssObjectByRuleName[ruleName];\n                        if (!cssObject.label) {\n                            cssObject.label = `${name !== undefined ? `${name}-` : \"\"}${ruleName}`;\n                        }\n                        return [\n                            ruleName,\n                            `${css(cssObject)}${typeGuard(ruleName, ruleName in refClassesCache)\n                                ? ` ${refClassesCache[ruleName]}`\n                                : \"\"}`,\n                        ];\n                    }));\n                    objectKeys(refClassesCache).forEach(ruleName => {\n                        if (ruleName in classes) {\n                            return;\n                        }\n                        classes[ruleName] =\n                            refClassesCache[ruleName];\n                    });\n                    return classes;\n                }, [cache, css, cx, theme, params]);\n                const propsClasses = styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.props.classes;\n                classes = useMemo(() => mergeClasses(classes, propsClasses, cx), [classes, propsClasses, cx]);\n                {\n                    let cssObjectByRuleNameOrGetCssObjectByRuleName = undefined;\n                    try {\n                        cssObjectByRuleNameOrGetCssObjectByRuleName =\n                            name !== undefined\n                                ? (_b = (_a = theme.components) === null || _a === void 0 ? void 0 : _a[name]) === null || _b === void 0 ? void 0 : _b.styleOverrides\n                                : undefined;\n                        // eslint-disable-next-line no-empty\n                    }\n                    catch (_c) { }\n                    const themeClasses = useMemo(() => {\n                        if (!cssObjectByRuleNameOrGetCssObjectByRuleName) {\n                            return undefined;\n                        }\n                        const themeClasses = {};\n                        for (const ruleName in cssObjectByRuleNameOrGetCssObjectByRuleName) {\n                            const cssObjectOrGetCssObject = cssObjectByRuleNameOrGetCssObjectByRuleName[ruleName];\n                            if (!(cssObjectOrGetCssObject instanceof Object)) {\n                                continue;\n                            }\n                            themeClasses[ruleName] = css(typeof cssObjectOrGetCssObject === \"function\"\n                                ? cssObjectOrGetCssObject(Object.assign({ theme, \"ownerState\": styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.ownerState }, styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.props))\n                                : cssObjectOrGetCssObject);\n                        }\n                        return themeClasses;\n                    }, [\n                        cssObjectByRuleNameOrGetCssObjectByRuleName ===\n                            undefined\n                            ? undefined\n                            : JSON.stringify(cssObjectByRuleNameOrGetCssObjectByRuleName),\n                        styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.props,\n                        styleOverrides === null || styleOverrides === void 0 ? void 0 : styleOverrides.ownerState,\n                        css,\n                    ]);\n                    classes = useMemo(() => mergeClasses(classes, themeClasses, cx), [classes, themeClasses, cx]);\n                }\n                return {\n                    classes,\n                    theme,\n                    css,\n                    cx,\n                };\n            };\n        };\n    }\n    function useStyles() {\n        const theme = useTheme();\n        const { css, cx } = useCssAndCx();\n        return { theme, css, cx };\n    }\n    return { makeStyles, useStyles };\n}\nconst reactContext = createContext(undefined);\nfunction useCacheProvidedByProvider() {\n    const cacheExplicitlyProvidedForTss = useContext(reactContext);\n    return cacheExplicitlyProvidedForTss;\n}\nexport function TssCacheProvider(props) {\n    const { children, value } = props;\n    return (React.createElement(reactContext.Provider, { value: value }, children));\n}\n","/** @see <https://docs.tsafe.dev/capitalize> */\nexport function capitalize(str) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (str.charAt(0).toUpperCase() + str.slice(1));\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { forwardRef, createElement } from \"react\";\nimport { createMakeStyles } from \"./makeStyles\";\nimport { capitalize } from \"./tools/capitalize\";\nexport function createWithStyles(params) {\n    const { useTheme, cache } = params;\n    const { makeStyles } = createMakeStyles({ useTheme, cache });\n    function withStyles(Component, cssObjectByRuleNameOrGetCssObjectByRuleName, params) {\n        const Component_ = typeof Component === \"string\"\n            ? (() => {\n                const tag = Component;\n                const Out = function (_a) {\n                    var { children } = _a, props = __rest(_a, [\"children\"]);\n                    return createElement(tag, props, children);\n                };\n                Object.defineProperty(Out, \"name\", {\n                    \"value\": capitalize(tag),\n                });\n                return Out;\n            })()\n            : Component;\n        /**\n         * Get component name for wrapping\n         * @see https://reactjs.org/docs/higher-order-components.html#convention-wrap-the-display-name-for-easy-debugging\n         */\n        const name = (() => {\n            {\n                const displayName = Component_.displayName;\n                if (displayName) {\n                    return displayName;\n                }\n            }\n            {\n                const { name } = Component_;\n                if (name) {\n                    return name;\n                }\n            }\n            return params === null || params === void 0 ? void 0 : params.name;\n        })();\n        const useStyles = makeStyles(Object.assign(Object.assign({}, params), { name }))(typeof cssObjectByRuleNameOrGetCssObjectByRuleName === \"function\"\n            ? (theme, props, classes) => incorporateMediaQueries(cssObjectByRuleNameOrGetCssObjectByRuleName(theme, props, classes))\n            : incorporateMediaQueries(cssObjectByRuleNameOrGetCssObjectByRuleName));\n        function getHasNonRootClasses(classes) {\n            for (const name in classes) {\n                if (name === \"root\") {\n                    continue;\n                }\n                return true;\n            }\n            return false;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const Out = forwardRef(function (props, ref) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { className, classes: _classes } = props, rest = __rest(props, [\"className\", \"classes\"]);\n            const { classes, cx } = useStyles(props, { props });\n            return (React.createElement(Component_, Object.assign({ ref: ref, className: getHasNonRootClasses(classes)\n                    ? className\n                    : cx(classes.root, className) }, (typeof Component === \"string\" ? {} : { classes }), rest)));\n        });\n        if (name !== undefined) {\n            Out.displayName = `${capitalize(name)}WithStyles`;\n            Object.defineProperty(Out, \"name\", { \"value\": Out.displayName });\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return Out;\n    }\n    return { withStyles };\n}\nfunction incorporateMediaQueries(cssObjectByRuleNameWithMediaQueries) {\n    const cssObjectByRuleName = {};\n    const cssObjectByRuleNameWithMediaQueriesByMediaQuery = {};\n    Object.keys(cssObjectByRuleNameWithMediaQueries).forEach(ruleNameOrMediaQuery => ((ruleNameOrMediaQuery.startsWith(\"@media\")\n        ? cssObjectByRuleNameWithMediaQueriesByMediaQuery\n        : cssObjectByRuleName)[ruleNameOrMediaQuery] =\n        cssObjectByRuleNameWithMediaQueries[ruleNameOrMediaQuery]));\n    Object.keys(cssObjectByRuleNameWithMediaQueriesByMediaQuery).forEach(mediaQuery => {\n        const cssObjectByRuleNameBis = cssObjectByRuleNameWithMediaQueriesByMediaQuery[mediaQuery];\n        Object.keys(cssObjectByRuleNameBis).forEach(ruleName => {\n            var _a;\n            return (cssObjectByRuleName[ruleName] = Object.assign(Object.assign({}, ((_a = cssObjectByRuleName[ruleName]) !== null && _a !== void 0 ? _a : {})), { [mediaQuery]: cssObjectByRuleNameBis[ruleName] }));\n        });\n    });\n    return cssObjectByRuleName;\n}\n","import React from \"react\";\nimport * as reactEmotion from \"@emotion/react\";\nexport function GlobalStyles(props) {\n    const { styles } = props;\n    return React.createElement(reactEmotion.Global, { styles: reactEmotion.css(styles) });\n}\n","import { createMakeStyles, TssCacheProvider } from \"./makeStyles\";\nexport { createMakeStyles, TssCacheProvider };\nimport { createWithStyles } from \"./withStyles\";\nexport { createWithStyles };\n/** @see <https://docs.tss-react.dev/api/keyframes> */\nexport { keyframes } from \"@emotion/react\";\n/** @see <https://docs.tss-react.dev/api/globalstyles> */\nexport { GlobalStyles } from \"./GlobalStyles\";\n/** @see <https://docs.tss-react.dev/api/makestyles> */\nexport function createMakeAndWithStyles(params) {\n    return Object.assign(Object.assign({}, createMakeStyles(params)), createWithStyles(params));\n}\n","\nimport { createMakeAndWithStyles } from \"tss-react\";\nimport { useTheme } from \"@mui/material/styles\";\n\nexport const { makeStyles, useStyles, withStyles } = createMakeAndWithStyles({ useTheme });\n","\nimport { useReducer, memo } from \"react\";\nimport { makeStyles, withStyles } from \"makeStyles\";\nimport { GlobalStyles } from \"tss-react\";\nimport { styled } from \"@mui/material\";\nimport Button from \"@mui/material/Button\"\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport type { CSSObject } from \"tss-react\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport Tab from \"@mui/material/Tab\";\nimport PhoneIcon from \"@mui/icons-material/Phone\";\n\nconst H1 = styled('h1')({\n\t\"color\": \"yellow\"\n});\n\nexport function App(props: { className?: string; }) {\n\tconst { className } = props;\n\tconst { classes, css, cx } = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyles\n\t\t\t\tstyles={{\n\t\t\t\t\t\"body\": {\n\t\t\t\t\t\t\"backgroundColor\": \"pink\"\n\t\t\t\t\t},\n\t\t\t\t\t\".foo\": {\n\t\t\t\t\t\t\"color\": \"cyan\"\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<h1>Black</h1>\n\t\t\t\t<h1>Should be lime green</h1>\n\t\t\t\t<h1\n\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\tcss({ \"border\": \"1px solid black\" }),\n\t\t\t\t\t\tclassName\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\tBlack, should have border and shadow\n\t\t\t\t</h1>\n\t\t\t\t<h1 className=\"foo\">Should be cyan</h1>\n\t\t\t\t<H1>Should be yellow</H1>\n\t\t\t\t<H1 className={classes.ovStyled}>Should be dark red</H1>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\"> Background should be lime green </Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.ovInternal}\n\t\t\t\t>\n\t\t\t\t\tBackground should be dark blue\n\t\t\t\t</Button>\n\t\t\t\t<div className={classes.parent}>\n\t\t\t\t\t<div className={classes.child}>\n\t\t\t\t\t\tBackground should turn red when mouse is hover the parent.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Breadcrumbs\n\t\t\t\t\tclassName={classes.breadcrumbs_className}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\t<span>background should be lightblue</span>\n\t\t\t\t\t<span>and the separator (/) should be red except when hover, then it is blue</span>\n\t\t\t\t</Breadcrumbs>\n\t\t\t\t<div style={{ \"height\": 10 }} />\n\t\t\t\t<Breadcrumbs\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\"root\": classes.breadcrumbs2_root,\n\t\t\t\t\t\t\"separator\": classes.breadcrumbs2_separator\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\t<span>background should be lightblue</span>\n\t\t\t\t\t<span>and the separator (/) should be red except when hover, then it is blue</span>\n\t\t\t\t</Breadcrumbs>\n\n\t\t\t\t<MyBreadcrumbs>\n\t\t\t\t\t<span>The separator</span>\n\t\t\t\t\t<span>should be lightgreen</span>\n\t\t\t\t</MyBreadcrumbs>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.button2_className}\n\t\t\t\t>\n\t\t\t\t\t<span>The background should be red</span>\n\t\t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclasses={{ \"root\": classes.button2_root, }}\n\t\t\t\t>\n\t\t\t\t\t<span>The background should be red</span>\n\t\t\t\t</Button>\n\t\t\t\t<div className={cx(classes.testCx_bgYellow, classes.testCx_bgCyan)}>\n\t\t\t\t\tBackground should be cyan\n\t\t\t\t</div>\n\t\t\t\t<div className={cx(classes.testCx_bgCyan, classes.testCx_bgYellow)}>\n\t\t\t\t\tBackground should be yellow\n\t\t\t\t</div>\n\n\n\n\t\t\t\t<div className={classes.childRefTest_wrapper}>\n\n\t\t\t\t\t<div className={cx(\n\t\t\t\t\t\tclasses.childRefTest_textColorPink,\n\t\t\t\t\t\tclasses.childRefTest_wrapper1\n\t\t\t\t\t)}>\n\t\t\t\t\t\tBackground should turn cyan when mouse hover the parent.\n\t\t\t\t\t\tAlso the text should NOT be pink\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={cx(classes.childRefTest_wrapper2)}>\n\t\t\t\t\t\tBackground should NOT turn cyan when mouse hover the parent.\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.mq}>\n\t\t\t\t\tThe background color should turn from lightgreen to cyan when the window\n\t\t\t\t\tinner with goes is below 960px\n\t\t\t\t</div>\n\n\t\t\t\t<MyComponentStyled\n\t\t\t\t\tclassName={css({ \"color\": \"red\" })}\n\t\t\t\t\tcolorSmall=\"cyan\"\n\t\t\t\t/>\n\t\t\t\t<MyStyledButton>\n\t\t\t\t\tThe text should turn from red to blue when the\n\t\t\t\t\twindow inner width goes below 960px\n\t\t\t\t\tAnd I should have a class like tss-xxxxxx-MyStyledButton-text\n\t\t\t\t</MyStyledButton>\n\t\t\t\t<br />\n\t\t\t\t<MyAnchorStyled href=\"http://exampe.com\">\n\t\t\t\t\tBackground should be red\n\t\t\t\t</MyAnchorStyled>\n\t\t\t\t<MyAnchorStyled href=\"https://exampe.com\">\n\t\t\t\t\tBackground should be limegreen\n\t\t\t\t</MyAnchorStyled>\n\t\t\t\t<div className={cx(\n\t\t\t\t\tcss({\n\t\t\t\t\t\t\"@media screen and (min-width: 1px)\": {\n\t\t\t\t\t\t\t\"backgroundColor\": \"red\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"height\": 50\n\t\t\t\t\t}),\n\t\t\t\t\tcss({\n\t\t\t\t\t\t\"backgroundColor\": \"lightgreen\"\n\t\t\t\t\t})\n\t\t\t\t)}>\n\t\t\t\t\tbackground should be lightgreen\n\t\t\t\t</div>\n\t\t\t\t<SecondNestedSelectorExample />\n\t\t\t\t<MyTestComponentForMergedClasses />\n\t\t\t\t<TestCastingMuiTypographyStyleToCSSObject />\n\t\t\t\t<TestPr54 />\n\t\t\t\t<TestingStyleOverrides\n\t\t\t\t\tclassName={css({ \"backgroundColor\": \"white\" })}\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\"root\": css({\n\t\t\t\t\t\t\t\"backgroundColor\": \"red\",\n\t\t\t\t\t\t\t\"border\": \"1px solid black\"\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\tlightBulbBorderColor=\"black\"\n\t\t\t\t/>\n\t\t\t\t<StyledTab icon={<PhoneIcon />} label=\"Background should be greenish\" />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nconst useStyles = makeStyles<void, \"child\" | \"breadcrumbs2_separator\" | \"childRefTest_wrapper2\" | \"childRefTest_wrapper1\">({\n\t\"name\": { App },\n})((theme, _params, classes) => {\n\n\tconst childRefTest_wrapper2 = {\n\t\t\"border\": \"1px solid black\",\n\t\t\"margin\": 30,\n\t\t\"height\": 100,\n\t\t\"color\": \"black\"\n\t};\n\n\treturn {\n\t\t\"root\": {\n\t\t\t\"& > h1:nth-child(2)\": {\n\t\t\t\t\"color\": theme.palette.primary.main,\n\t\t\t}\n\t\t},\n\t\t\"ovStyled\": {\n\t\t\t\"color\": \"darkred\"\n\t\t},\n\t\t\"ovInternal\": {\n\t\t\t\"backgroundColor\": \"darkblue\"\n\t\t},\n\t\t\"parent\": {\n\t\t\t\"border\": \"1px solid black\",\n\t\t\t\"padding\": 30,\n\t\t\t[`&:hover .${classes.child}`]: {\n\t\t\t\t\"background\": \"red\",\n\t\t\t}\n\t\t},\n\t\t\"child\": {\n\t\t\t\"background\": \"blue\",\n\t\t\t\"border\": \"1px solid black\"\n\t\t},\n\t\t\"breadcrumbs_className\": {\n\t\t\t\"backgroundColor\": \"lightblue\",\n\t\t\t\"& .MuiBreadcrumbs-separator\": {\n\t\t\t\t\"color\": \"red\"\n\t\t\t},\n\t\t\t\"&:hover .MuiBreadcrumbs-separator\": {\n\t\t\t\t\"color\": \"blue\"\n\t\t\t}\n\t\t},\n\n\t\t\"breadcrumbs2_root\": {\n\t\t\t\"backgroundColor\": \"lightblue\",\n\t\t\t[`&:hover .${classes.breadcrumbs2_separator}`]: {\n\t\t\t\t\"color\": \"blue\"\n\t\t\t}\n\t\t},\n\t\t\"breadcrumbs2_separator\": {\n\t\t\t\"color\": \"red\"\n\t\t},\n\n\t\t\"button2_className\": {\n\t\t\t\"backgroundColor\": \"red\"\n\t\t},\n\n\t\t\"button2_root\": {\n\t\t\t\"backgroundColor\": \"red\"\n\t\t},\n\n\t\t\"testCx_bgYellow\": {\n\t\t\t\"backgroundColor\": \"yellow\"\n\t\t},\n\t\t\"testCx_bgCyan\": {\n\t\t\t\"backgroundColor\": \"cyan\"\n\t\t},\n\n\t\t\"childRefTest_wrapper\": {\n\t\t\t\"border\": \"1px solid black\",\n\t\t\t[`&:hover .${classes.childRefTest_wrapper1}`]: {\n\t\t\t\t\"backgroundColor\": \"cyan\"\n\t\t\t}\n\t\t},\n\t\t\"childRefTest_wrapper1\": {\n\t\t\t...childRefTest_wrapper2\n\t\t},\n\t\tchildRefTest_wrapper2,\n\t\t\"childRefTest_textColorPink\": {\n\t\t\t\"color\": \"pink\"\n\t\t},\n\t\t\"mq\": {\n\t\t\t\"height\": 100,\n\t\t\t\"backgroundColor\": \"lightgreen\",\n\t\t\t\"@media (max-width: 960px)\": {\n\t\t\t\t\"backgroundColor\": \"cyan\"\n\t\t\t}\n\t\t}\n\t};\n});\n\nfunction MyComponent(props: { className?: string; colorSmall: string; }) {\n\treturn (\n\t\t<div className={props.className}>\n\t\t\tThe background color should turn from limegreen to cyan when the window\n\t\t\tinner with goes below 960px.\n\t\t\tFont should be red\n\t\t</div>\n\t);\n}\n\nconst MyComponentStyled = withStyles(\n\tMyComponent,\n\t(theme, props) => ({\n\t\t\"root\": {\n\t\t\t\"backgroundColor\": theme.palette.primary.main,\n\t\t\t\"height\": 100,\n\t\t\t\"marginTop\": 20\n\t\t},\n\t\t\"@media (max-width: 960px)\": {\n\t\t\t\"root\": {\n\t\t\t\t\"backgroundColor\": props.colorSmall\n\t\t\t},\n\t\t}\n\t})\n);\n\nconst MyStyledButton = withStyles(\n\tButton,\n\t{\n\t\t\"text\": {\n\t\t\t\"color\": \"red\",\n\t\t\t\"textTransform\": \"unset\"\n\t\t},\n\t\t\"@media (max-width: 960px)\": {\n\t\t\t\"text\": {\n\t\t\t\t\"color\": \"blue\"\n\t\t\t},\n\t\t}\n\t},\n\t{ \"name\": \"MyStyledButton\" }\n);\n\nconst MyAnchorStyled = withStyles(\n\t\"a\",\n\t(theme, { href }) => ({\n\t\t\"root\": {\n\t\t\t\"border\": \"1px solid black\",\n\t\t\t\"backgroundColor\":\n\t\t\t\thref?.startsWith(\"https\") ?\n\t\t\t\t\ttheme.palette.primary.main :\n\t\t\t\t\t\"red\"\n\t\t}\n\t})\n);\n\nconst MyBreadcrumbs = withStyles(\n\tBreadcrumbs,\n\t(theme, _props, classes) => ({\n\t\t\"ol\": {\n\t\t\t[`& .${classes.separator}`]: {\n\t\t\t\t\"color\": theme.palette.primary.main\n\t\t\t}\n\t\t}\n\t})\n);\n\nconst { SecondNestedSelectorExample } = (() => {\n\n\tconst SecondNestedSelectorExample = memo(() => {\n\n\t\tconst { classes, cx } = useStyles({ \"color\": \"primary\" });\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.child}>\n\t\t\t\t\tThe Background take the primary theme color when the mouse is hover the parent.\n\t\t\t\t</div>\n\t\t\t\t<div className={cx(classes.child, classes.small)}>\n\t\t\t\t\tThe Background take the primary theme color when the mouse is hover the parent.\n\t\t\t\t\tI am smaller than the other child.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t});\n\n\tconst useStyles = makeStyles<{ color: \"primary\" | \"secondary\" }, \"child\" | \"small\">({\n\t\t\"name\": { SecondNestedSelectorExample }\n\t})(\n\t\t(theme, { color }, classes) => ({\n\t\t\t\"root\": {\n\t\t\t\t\"padding\": 30,\n\t\t\t\t[`&:hover .${classes.child}`]: {\n\t\t\t\t\t\"backgroundColor\": theme.palette[color].main,\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"small\": {},\n\t\t\t\"child\": {\n\t\t\t\t\"border\": \"1px solid black\",\n\t\t\t\t\"height\": 50,\n\t\t\t\t[`&.${classes.small}`]: {\n\t\t\t\t\t\"height\": 30,\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t);\n\n\treturn { SecondNestedSelectorExample };\n\n})()\n\nconst { MyTestComponentForMergedClasses } = (() => {\n\n\tconst useStyles = makeStyles()({\n\t\t\"foo\": {\n\t\t\t\"border\": \"3px dotted black\",\n\t\t\t\"backgroundColor\": \"red\"\n\t\t},\n\t\t\"bar\": {\n\t\t\t\"color\": \"pink\"\n\t\t}\n\t});\n\n\ttype Props = {\n\t\tclasses?: Partial<ReturnType<typeof useStyles>[\"classes\"]>;\n\t};\n\n\tconst MyTestComponentForMergedClassesInternal = (props: Props) => {\n\n\t\tconst { classes } = useStyles(undefined, { props });\n\n\t\treturn (\n\t\t\t<div className={classes.foo}>\n\t\t\t\t<span className={classes.bar}>The background should be green, the box should have a dotted border and the text should be pink</span>\n\t\t\t</div>\n\t\t);\n\n\t};\n\n\n\tconst MyTestComponentForMergedClasses = () => {\n\n\t\tconst { css } = useStyles();\n\n\t\treturn <MyTestComponentForMergedClassesInternal classes={{ \"foo\": css({ \"backgroundColor\": \"green\" }) }} />;\n\n\t};\n\n\treturn { MyTestComponentForMergedClasses };\n\n})();\n\nconst { TestCastingMuiTypographyStyleToCSSObject } = (() => {\n\n\tconst useStyles = makeStyles()(theme => ({\n\t\t\"root\": {\n\t\t\t...(theme.typography.subtitle2 as CSSObject),\n\t\t\t\"color\": \"red\"\n\t\t}\n\t}));\n\n\tconst TestCastingMuiTypographyStyleToCSSObject = () => {\n\n\t\tconst { classes } = useStyles();\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Typography variant=\"subtitle2\">This text should be italic</Typography>\n\t\t\t\t<span className={classes.root}>This text should be italic and red</span>\n\t\t\t</>\n\t\t);\n\n\t};\n\n\treturn { TestCastingMuiTypographyStyleToCSSObject };\n\n})();\n\nconst { TestPr54 } = (() => {\n\n\tconst CustomInputBase = withStyles(\n\t\tInputBase,\n\t\ttheme =>\n\t\t({\n\t\t\t\"input\": {\n\t\t\t\t\"backgroundColor\": theme.palette.grey[50],\n\t\t\t},\n\t\t} as const)\n\t);\n\n\tconst TestPr54 = withStyles(CustomInputBase, () => ({\n\t\t\"input\": {\n\t\t\t\"backgroundColor\": \"red\"\n\t\t},\n\t}));\n\n\treturn { TestPr54 };\n\n})();\n\nconst { TestingStyleOverrides } = (() => {\n\n\ttype Props = {\n\t\tclassName?: string;\n\t\tclasses?: Partial<ReturnType<typeof useStyles>[\"classes\"]>;\n\t\tlightBulbBorderColor: string;\n\t}\n\n\tfunction TestingStyleOverrides(props: Props) {\n\n\t\tconst { className } = props;\n\n\t\tconst [isOn, toggleIsOn] = useReducer(isOn => !isOn, false);\n\n\t\tconst { classes, cx } = useStyles(undefined, { props, \"ownerState\": { isOn } });\n\n\t\treturn (\n\t\t\t<div className={cx(classes.root, className)} >\n\t\t\t\t<div className={classes.lightBulb}></div>\n\t\t\t\t<button onClick={toggleIsOn}>{`Turn ${isOn ? \"off\" : \"on\"}`}</button>\n\t\t\t\t<p>Div should have a border, background should be white</p>\n\t\t\t\t<p>Light bulb should have black border, it should be yellow when turned on.</p>\n\t\t\t</div>\n\t\t);\n\n\t}\n\n\tconst useStyles = makeStyles({ \"name\": { TestingStyleOverrides } })(theme => ({\n\t\t\"root\": {\n\t\t\t\"border\": \"1px solid black\",\n\t\t\t\"width\": 500,\n\t\t\t\"height\": 200,\n\t\t\t\"position\": \"relative\",\n\t\t\t\"color\": \"black\"\n\t\t},\n\t\t\"lightBulb\": {\n\t\t\t\"position\": \"absolute\",\n\t\t\t\"width\": 50,\n\t\t\t\"height\": 50,\n\t\t\t\"top\": 120,\n\t\t\t\"left\": 500 / 2 - 50,\n\t\t\t\"borderRadius\": \"50%\"\n\t\t}\n\t}));\n\n\treturn { TestingStyleOverrides };\n\n})();\n\nconst StyledTab = withStyles(Tab, {\n\t\"root\": {\n\t\t\"backgroundColor\": \"red\"\n\t},\n\t\"labelIcon\": {\n\t\t\"backgroundColor\": \"green\"\n\t}\n});","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport { StrictMode } from \"react\";\n//NOTE: If makeStyles was located in src/app we would write: import { makeStyles } from \"app/makeStyles\";\nimport { useStyles } from \"makeStyles\";\nimport { App } from \"./App\";\nimport { CacheProvider } from \"@emotion/react\";\nimport { ThemeProvider as MuiThemeProvider } from \"@mui/material/styles\";\nimport { createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { createRoot } from \"react-dom/client\";\nimport createCache from \"@emotion/cache\";\n\nconst muiCache = createCache({\n    \"key\": \"mui\",\n    \"prepend\": true\n});\n\nconst theme = createTheme({\n    \"palette\": {\n        \"primary\": {\n            \"main\": \"#32CD32\" //Limegreen\n        },\n        \"info\": {\n            \"main\": \"#ffff00\" //Yellow\n        }\n    },\n    \"typography\": {\n        \"subtitle2\": {\n            \"fontStyle\": \"italic\"\n        }\n    },\n    \"components\": {\n        //@ts-ignore\n        \"TestingStyleOverrides\": {\n            \"styleOverrides\": {\n                \"lightBulb\": ({ theme, ownerState: { isOn }, lightBulbBorderColor }: any) => ({\n                    \"border\": `1px solid ${lightBulbBorderColor}`,\n                    \"backgroundColor\": isOn ? theme.palette.info.main : \"grey\"\n                })\n            }\n\n        }\n    }\n});\n\nfunction Root() {\n\n    const { css } = useStyles();\n\n    return <App className={css({ \"boxShadow\": \"10px 5px 5px teal\" })} />;\n\n}\n\ncreateRoot(document.getElementById(\"root\")!).render(\n    <StrictMode>\n        <CacheProvider value={muiCache}>\n            <MuiThemeProvider theme={theme}>\n                <CssBaseline />\n                <Root />\n            </MuiThemeProvider>\n        </CacheProvider>\n    </StrictMode>\n);\n"],"sourceRoot":""}